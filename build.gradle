apply plugin: 'signing'

group = 'com.eclipsesource.j2v8'
archivesBaseName = 'j2v8'
version = System.getenv('J2V8_FULL_VERSION')

configurations {
    archives {
        extendsFrom configurations.default
    }
}

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.12.0'
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:1.2.2'
        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.32.0'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'spoon'
apply plugin: 'com.vanniktech.maven.publish'

repositories {    
    google()
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.12'
    //testCompile 'org.mockito:mockito-all:2.6.3'
    testImplementation 'org.mockito:mockito-core:2.6.3'

    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'org.mockito:mockito-android:2.6.3' // https://jeroenmols.com/blog/2017/01/17/mockitoandroid/
    androidTestImplementation 'com.android.support:support-annotations:24.0.0'
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test:rules:0.5'
}

android {
    compileSdk 35
    namespace "com.eclipsesource.v8"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 10

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        androidTest {
            java.srcDirs = ['src/test']
        }

        // androidTest.setRoot('src/test')
    }

}

// see: https://github.com/square/spoon
spoon {
    // for debug output
    debug = true

    // To run only specified test classes
    if (project.hasProperty('testClass')) {
        className = project.testClass
    }

    // To run a single method in TestCase
    if (project.hasProperty('testMethod')) {
        methodName = project.testMethod
    }
}

signing {
    // required { has("release") && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

import com.vanniktech.maven.publish.SonatypeHost

afterEvaluate {
    mavenPublishing {
        publishToMavenCentral(SonatypeHost.CENTRAL_PORTAL)
        signAllPublications()

        coordinates("io.github.k4k7us23", "j2v8", "1.0")

        pom {
            name = "j2v8"
            description = "J2V8 is a set of Java bindings for V8"
            url = "https://github.com/k4k7us23/J2V8"
            licenses {
                license {
                    name = "Eclipse Public License - v 1.0"
                    url = "https://www.eclipse.org/legal/epl-v10.html"
                    distribution = "repo"
                }
            }
        
            developers {
              developer {
                id = "pavel-krylov"
                name = "Pavel Krylov"
                url = "https://github.com/k4k7us23"
              }
            }
            scm {
              url = "https://github.com/k4k7us23/J2V8"
              connection = "scm:git:git://github.com/k4k7us23/J2V8.git"
              developerConnection = "scm:git:git://github.com/k4k7us23/J2V8.git"
            }
        }
    }   

}


